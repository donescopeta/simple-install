#!/bin/bash

read -r -d '' HELP <<EOF
install.sh Simple installator which uses an info file.
Usage : install.sh [NAME OF A SUBSECTION IN INFO FILE] [options]
	-h			This help text.
	-a			Don't ask to do a step.
	-v			Show the commands which will be executed.
	-s 		step	Do step certain.
	-l			List sections and its comments.
	-c			Use a config file.
	-i 			Use a specified instalation file.
Example :
	install.sh INSTALL
	install.sh UNINSTALL -v
~~Mateusz SokoÅ‚owski 2013~~
EOF

#define variable forom stdin
def(){ read -d '' -r $1 ;} 

#define variable $1 from variable $2
defF(){
	def $1 <<<"${!2}"
}

ask(){
	local yon
	echo -n "[y/n] "
	read -r -n 1 yon
	echo ""
	[ "$yon" == "y" ] && return 0 || return 1
}

showcommands(){
	echo "Commands:"
	incat $1 | sed "s/^/\t/"
}

execute(){
	local tmpfile=/tmp/tmpscript$(date +%s).bash
	incat $1 > $tmpfile
	source $tmpfile
	#cat $tmpfile
	rm $tmpfile
}

JUMP(){
	JUMPTOSTEP=true
	STEP="${1}"
}
is_main(){
	[ "$step" == "main" ] && return 0 || return 1
}
teval(){
	eval "echo -e \"${!1}\""
}

## info script functions
	incat(){ 
		cat <<<"${!1}" 
	}

	getSectionFrom(){
		incat $1 | awk "/^##SECTION $2\$/{flag=1; next} /##SECTION.*/{flag=0} flag" | \
			sed "s/^\t//"
	}

	getSectionsFrom(){
		incat $1 | grep "##SECTION" | sed -e "s/.* //" | tr '\n' ' '
		
	}

	getSubsectionFrom(){
		incat $1 | awk "/##$2/{flag=1; next} /^##.*/{flag=0} flag" | sed "s/^\t//"
	}

	getSubsectionsFrom(){
		incat $1 | sed -n '/^##/p' | sed "s/^##//" | tr '\n' ' '
	}

	getLongVariableNamesFrom(){
		getSubsectionsFrom $1 | \
			tr ' ' '\n' | \
			grep "^DATA:"  | \
			sed "s/^DATA://" | \
			tr '\n' ' '
	}
	uncomment(){
		# Uncomment stuff in file.
		sed -i "/^#.*$1/s/^#//" $2
	}

	comment(){
		# comment stuff in file
		sed -i "/$1/s/^/#/" $2
	}

	are_packages_installed(){
		local i=0
		for p in ${*} ; do 
		dpkg -l $p 2>&1 | grep -q "no packages" || ((i++))
		done
		local num=$(echo $* | wc -w)
		[[ $num == $i ]] && return 0 || return 1
	}

	replaceValueIfContains(){
		## pattern, replacement, destenaton
		sed -i "/$1/s/= .*/= $2/" $3
	}

INSTALLINFOFILE=./install-info
JUMPTOSTEP=false
ASKTODOASTEP=true
SHOWCOMMANDS=false
EXACTSTEP=false
LISTONLY=false
STEP=""

[ $# -eq 0 ] && {
	incat HELP
	exit 0	
}

[[ $1 != "-"* ]] && {
	OPERATION=$1
	shift
}

while [[ $# -ge 1 ]] ; do
	key="$1"
	case $key in
		'-h')
			echo "help"
			incat HELP
			exit 0
			;;
		'-a')
			ASKTODOASTEP=false
			;;
		'-v')
			SHOWCOMMANDS=true
			;;
		'-s')
			EXACTSTEP=true
			STEP=$2
			shift
			;;
		'-c')
			source $2
			shift
			;;
		'-l')
			LISTONLY=true
			;;
		'-i')
			INSTALLINFOFILE=$2
			shift
			;;
	esac
	shift
done


read  -d '' -r install_info < ${INSTALLINFOFILE}
$EXACTSTEP &&\
	steps="main $STEP" || \
	steps=$( getSectionsFrom install_info )
	
stepsAmount=$( wc -w <<<${steps} ) 
stepI=0
definitions=()

for step in $steps ; do
	is_main && ((stepsAmount--)) || {
		((stepI++))
		$JUMPTOSTEP && {
			[ "$step" == "$STEP" ] && JUMPTOSTEP=false || continue
		}

		echo -e "Step ${stepI} of ${stepsAmount}: $step\n"
	} 
	
	section=$(getSectionFrom install_info $step)
	getSubsectionFrom section COMMENT |  sed -e "s/^/\t/"
	echo ""
	$LISTONLY && continue
	
	##loading the nessesery data to execute INSTALL or UNINSTALL in section
	while IFS='=' read var d ;do
		[[ -v "${var}" ]] && continue
		definitions+=($var)
		def $var < <(eval "echo \"$d\"")
		#echo $d
		
	done < <(getSubsectionFrom section DEFINE | sed "s/ =/=/;s/= /=/")
	
	variables=$( getLongVariableNamesFrom section )
	for var in $variables; do
		stuff=$(getSubsectionFrom section "DATA:$var")
		def $var < <(teval stuff)
	done
	
	#do the stuff
	
	[ -n "$OPERATION" ] && {
		job=$( getSubsectionFrom section ${OPERATION} )
		$SHOWCOMMANDS && showcommands job
		$ASKTODOASTEP && {
			ask || continue 
		}
		execute job
	}
	
	#unset varivbles, definitions
	is_main && continue
	unset $variables ${definitions[@]}
	unset definitions[@]
done
	
